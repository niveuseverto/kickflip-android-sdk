apply plugin: 'com.android.library'

def getVersionCode() {
    return 9
}

def getVersionName() {
    return '1.2'
}

android {
    compileSdkVersion 21
    buildToolsVersion "20.0"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 21
        versionCode getVersionCode()
        versionName getVersionName()

    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt', 'proguard-google-api-client.txt'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

}

configurations {
    jaxDoclet
    classpaths
}

dependencies {
    compile 'com.google.guava:guava:18.0'
    compile 'com.android.support:support-v4:21.0.3'

    compile 'com.google.http-client:google-http-client:1.19.0'
    compile 'com.google.http-client:google-http-client-android:1.19.0'
    compile 'com.google.http-client:google-http-client-jackson2:1.19.0'
    compile 'com.google.oauth-client:google-oauth-client:1.19.0'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.google.code.findbugs:jsr305:3.0.0'
    compile 'com.google.protobuf:protobuf-java:2.6.1'

    compile 'com.amazonaws:aws-android-sdk-core:2.1.5'
    compile 'com.amazonaws:aws-android-sdk-s3:2.1.5'

    compile 'com.fasterxml.jackson.core:jackson-core:2.5.0'

    compile files('libs/m3u8parser-0.2.jar')

    // For Doclava JavaDoc
    jaxDoclet("com.google.doclava:doclava:1.0.5")
    //classpaths files('build/classes/release')
    classpaths fileTree(dir: 'build/classes/release').matching { include 'io/kickflip/sdk/Kickflip.java' }
    classpaths files(new File(System.getenv('ANDROID_HOME') + '/platforms/android-21/android.jar'))
}

// Maven publish task
// Uncomment this line to enable publishing to Maven Central. Requires maven
// credentials in gradle.properties
//apply from: 'https://raw.github.com/OnlyInAmerica/mvn-repo/master/maven.gradle'

// Generate JavaDoc
android.libraryVariants.all { variant ->

    task("generate${variant.name}Javadoc", type: Javadoc) {
        source = android.sourceSets.main.java
        title = null
        options.docletpath = configurations.jaxDoclet.files.asType(List)
        options.classpath = configurations.classpaths.files.asType(List)
        options {
            doclet "com.google.doclava.Doclava"
            bootClasspath new File(System.getenv('JAVA_HOME') + "/jre/lib/rt.jar")
            addStringOption "warning", '110'  // Allow undocumented types
            addStringOption "overview", "/Users/davidbrodsky/Code/android/kickflip-android-example/submodules/kickflip-android-sdk/sdk/src/javadoc-overview.html"
            addStringOption "public"
            addStringOption "hdf project.name", "Kickflip Android SDK"
            addStringOption "federate android", "http://d.android.com/reference"
            addStringOption "federationxml android", "http://doclava.googlecode.com/svn/static/api/android-10.xml"
        }
    }

}
